import unittest
import cnf
from resolution import resolve_symbol, unit_resolution, full_resolution
from search import SearchSolver
from sudoku import SudokuBoard, exactly_one_clauses

class TestSudokuBoard(unittest.TestCase):

    def test_board(self):
        board = SudokuBoard([[0, 0, 0, 3], 
                             [0, 0, 0, 2], 
                             [3, 0, 0, 0], 
                             [4, 0, 0, 0]])
        expected = "\n".join(["0003",
                              "0002",
                              "3000",
                              "4000"])
        assert str(board) == expected
        expected = [[(1, 1), (1, 2), (1, 3), (1, 4)], 
                    [(2, 1), (2, 2), (2, 3), (2, 4)], 
                    [(3, 1), (3, 2), (3, 3), (3, 4)], 
                    [(4, 1), (4, 2), (4, 3), (4, 4)]]
        assert board.rows() == expected
        expected = [[(1, 1), (2, 1), (3, 1), (4, 1)], 
                    [(1, 2), (2, 2), (3, 2), (4, 2)], 
                    [(1, 3), (2, 3), (3, 3), (4, 3)], 
                    [(1, 4), (2, 4), (3, 4), (4, 4)]]
        assert board.columns() == expected
        expected = [[(1, 1), (1, 2), (2, 1), (2, 2)], 
                    [(1, 3), (1, 4), (2, 3), (2, 4)], 
                    [(3, 1), (3, 2), (4, 1), (4, 2)], 
                    [(3, 3), (3, 4), (4, 3), (4, 4)]]
        assert board.zones() == expected
 


class TestSudoku(unittest.TestCase):
    
    def test_solve(self):
        board = SudokuBoard([[0, 0, 0, 3], [0, 0, 0, 2], [3, 0, 0, 0], [4, 0, 0, 0]])
        solved = board.solve(SearchSolver())
        expected = '\n'.join(['2413',
                              '1342',
                              '3124',
                              '4231'])
        assert str(solved) == expected
    
    def test_general_zone_clauses(self):
        board = SudokuBoard([[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]])
        result = exactly_one_clauses(board.zones(), board.cell_width)
        cnf = sorted([str(c) for c in result])    
        expected = ["!d1_1_1 || !d1_1_2",
                    "!d1_1_1 || !d1_2_1",
                    "!d1_1_1 || !d1_2_2",
                    "!d1_1_2 || !d1_2_1",
                    "!d1_1_2 || !d1_2_2",
                    "!d1_1_3 || !d1_1_4",
                    "!d1_1_3 || !d1_2_3",
                    "!d1_1_3 || !d1_2_4",
                    "!d1_1_4 || !d1_2_3",
                    "!d1_1_4 || !d1_2_4",
                    "!d1_2_1 || !d1_2_2",
                    "!d1_2_3 || !d1_2_4",
                    "!d1_3_1 || !d1_3_2",
                    "!d1_3_1 || !d1_4_1",
                    "!d1_3_1 || !d1_4_2",
                    "!d1_3_2 || !d1_4_1",
                    "!d1_3_2 || !d1_4_2",
                    "!d1_3_3 || !d1_3_4",
                    "!d1_3_3 || !d1_4_3",
                    "!d1_3_3 || !d1_4_4",
                    "!d1_3_4 || !d1_4_3",
                    "!d1_3_4 || !d1_4_4",
                    "!d1_4_1 || !d1_4_2",
                    "!d1_4_3 || !d1_4_4",
                    "!d2_1_1 || !d2_1_2",
                    "!d2_1_1 || !d2_2_1",
                    "!d2_1_1 || !d2_2_2",
                    "!d2_1_2 || !d2_2_1",
                    "!d2_1_2 || !d2_2_2",
                    "!d2_1_3 || !d2_1_4",
                    "!d2_1_3 || !d2_2_3",
                    "!d2_1_3 || !d2_2_4",
                    "!d2_1_4 || !d2_2_3",
                    "!d2_1_4 || !d2_2_4",
                    "!d2_2_1 || !d2_2_2",
                    "!d2_2_3 || !d2_2_4",
                    "!d2_3_1 || !d2_3_2",
                    "!d2_3_1 || !d2_4_1",
                    "!d2_3_1 || !d2_4_2",
                    "!d2_3_2 || !d2_4_1",
                    "!d2_3_2 || !d2_4_2",
                    "!d2_3_3 || !d2_3_4",
                    "!d2_3_3 || !d2_4_3",
                    "!d2_3_3 || !d2_4_4",
                    "!d2_3_4 || !d2_4_3",
                    "!d2_3_4 || !d2_4_4",
                    "!d2_4_1 || !d2_4_2",
                    "!d2_4_3 || !d2_4_4",
                    "!d3_1_1 || !d3_1_2",
                    "!d3_1_1 || !d3_2_1",
                    "!d3_1_1 || !d3_2_2",
                    "!d3_1_2 || !d3_2_1",
                    "!d3_1_2 || !d3_2_2",
                    "!d3_1_3 || !d3_1_4",
                    "!d3_1_3 || !d3_2_3",
                    "!d3_1_3 || !d3_2_4",
                    "!d3_1_4 || !d3_2_3",
                    "!d3_1_4 || !d3_2_4",
                    "!d3_2_1 || !d3_2_2",
                    "!d3_2_3 || !d3_2_4",
                    "!d3_3_1 || !d3_3_2",
                    "!d3_3_1 || !d3_4_1",
                    "!d3_3_1 || !d3_4_2",
                    "!d3_3_2 || !d3_4_1",
                    "!d3_3_2 || !d3_4_2",
                    "!d3_3_3 || !d3_3_4",
                    "!d3_3_3 || !d3_4_3",
                    "!d3_3_3 || !d3_4_4",
                    "!d3_3_4 || !d3_4_3",
                    "!d3_3_4 || !d3_4_4",
                    "!d3_4_1 || !d3_4_2",
                    "!d3_4_3 || !d3_4_4",
                    "!d4_1_1 || !d4_1_2",
                    "!d4_1_1 || !d4_2_1",
                    "!d4_1_1 || !d4_2_2",
                    "!d4_1_2 || !d4_2_1",
                    "!d4_1_2 || !d4_2_2",
                    "!d4_1_3 || !d4_1_4",
                    "!d4_1_3 || !d4_2_3",
                    "!d4_1_3 || !d4_2_4",
                    "!d4_1_4 || !d4_2_3",
                    "!d4_1_4 || !d4_2_4",
                    "!d4_2_1 || !d4_2_2",
                    "!d4_2_3 || !d4_2_4",
                    "!d4_3_1 || !d4_3_2",
                    "!d4_3_1 || !d4_4_1",
                    "!d4_3_1 || !d4_4_2",
                    "!d4_3_2 || !d4_4_1",
                    "!d4_3_2 || !d4_4_2",
                    "!d4_3_3 || !d4_3_4",
                    "!d4_3_3 || !d4_4_3",
                    "!d4_3_3 || !d4_4_4",
                    "!d4_3_4 || !d4_4_3",
                    "!d4_3_4 || !d4_4_4",
                    "!d4_4_1 || !d4_4_2",
                    "!d4_4_3 || !d4_4_4",
                    "d1_1_1 || d1_1_2 || d1_2_1 || d1_2_2",
                    "d1_1_3 || d1_1_4 || d1_2_3 || d1_2_4",
                    "d1_3_1 || d1_3_2 || d1_4_1 || d1_4_2",
                    "d1_3_3 || d1_3_4 || d1_4_3 || d1_4_4",
                    "d2_1_1 || d2_1_2 || d2_2_1 || d2_2_2",
                    "d2_1_3 || d2_1_4 || d2_2_3 || d2_2_4",
                    "d2_3_1 || d2_3_2 || d2_4_1 || d2_4_2",
                    "d2_3_3 || d2_3_4 || d2_4_3 || d2_4_4",
                    "d3_1_1 || d3_1_2 || d3_2_1 || d3_2_2",
                    "d3_1_3 || d3_1_4 || d3_2_3 || d3_2_4",
                    "d3_3_1 || d3_3_2 || d3_4_1 || d3_4_2",
                    "d3_3_3 || d3_3_4 || d3_4_3 || d3_4_4",
                    "d4_1_1 || d4_1_2 || d4_2_1 || d4_2_2",
                    "d4_1_3 || d4_1_4 || d4_2_3 || d4_2_4",
                    "d4_3_1 || d4_3_2 || d4_4_1 || d4_4_2",
                    "d4_3_3 || d4_3_4 || d4_4_3 || d4_4_4"]
        assert cnf == expected
    
    def test_constraints(self):
        board0 = SudokuBoard([[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]])
        #cnf = sorted([str(c) for c in board0.cnf()])     
        expected = ["!d1_1_1 || !d1_1_2",
                    "!d1_1_1 || !d1_1_2",
                    "!d1_1_1 || !d1_1_3",
                    "!d1_1_1 || !d1_1_4",
                    "!d1_1_1 || !d1_2_1",
                    "!d1_1_1 || !d1_2_1",
                    "!d1_1_1 || !d1_2_2",
                    "!d1_1_1 || !d1_3_1",
                    "!d1_1_1 || !d1_4_1",
                    "!d1_1_2 || !d1_1_3",
                    "!d1_1_2 || !d1_1_4",
                    "!d1_1_2 || !d1_2_1",
                    "!d1_1_2 || !d1_2_2",
                    "!d1_1_2 || !d1_2_2",
                    "!d1_1_2 || !d1_3_2",
                    "!d1_1_2 || !d1_4_2",
                    "!d1_1_3 || !d1_1_4",
                    "!d1_1_3 || !d1_1_4",
                    "!d1_1_3 || !d1_2_3",
                    "!d1_1_3 || !d1_2_3",
                    "!d1_1_3 || !d1_2_4",
                    "!d1_1_3 || !d1_3_3",
                    "!d1_1_3 || !d1_4_3",
                    "!d1_1_4 || !d1_2_3",
                    "!d1_1_4 || !d1_2_4",
                    "!d1_1_4 || !d1_2_4",
                    "!d1_1_4 || !d1_3_4",
                    "!d1_1_4 || !d1_4_4",
                    "!d1_2_1 || !d1_2_2",
                    "!d1_2_1 || !d1_2_2",
                    "!d1_2_1 || !d1_2_3",
                    "!d1_2_1 || !d1_2_4",
                    "!d1_2_1 || !d1_3_1",
                    "!d1_2_1 || !d1_4_1",
                    "!d1_2_2 || !d1_2_3",
                    "!d1_2_2 || !d1_2_4",
                    "!d1_2_2 || !d1_3_2",
                    "!d1_2_2 || !d1_4_2",
                    "!d1_2_3 || !d1_2_4",
                    "!d1_2_3 || !d1_2_4",
                    "!d1_2_3 || !d1_3_3",
                    "!d1_2_3 || !d1_4_3",
                    "!d1_2_4 || !d1_3_4",
                    "!d1_2_4 || !d1_4_4",
                    "!d1_3_1 || !d1_3_2",
                    "!d1_3_1 || !d1_3_2",
                    "!d1_3_1 || !d1_3_3",
                    "!d1_3_1 || !d1_3_4",
                    "!d1_3_1 || !d1_4_1",
                    "!d1_3_1 || !d1_4_1",
                    "!d1_3_1 || !d1_4_2",
                    "!d1_3_2 || !d1_3_3",
                    "!d1_3_2 || !d1_3_4",
                    "!d1_3_2 || !d1_4_1",
                    "!d1_3_2 || !d1_4_2",
                    "!d1_3_2 || !d1_4_2",
                    "!d1_3_3 || !d1_3_4",
                    "!d1_3_3 || !d1_3_4",
                    "!d1_3_3 || !d1_4_3",
                    "!d1_3_3 || !d1_4_3",
                    "!d1_3_3 || !d1_4_4",
                    "!d1_3_4 || !d1_4_3",
                    "!d1_3_4 || !d1_4_4",
                    "!d1_3_4 || !d1_4_4",
                    "!d1_4_1 || !d1_4_2",
                    "!d1_4_1 || !d1_4_2",
                    "!d1_4_1 || !d1_4_3",
                    "!d1_4_1 || !d1_4_4",
                    "!d1_4_2 || !d1_4_3",
                    "!d1_4_2 || !d1_4_4",
                    "!d1_4_3 || !d1_4_4",
                    "!d1_4_3 || !d1_4_4",
                    "!d2_1_1 || !d2_1_2",
                    "!d2_1_1 || !d2_1_2",
                    "!d2_1_1 || !d2_1_3",
                    "!d2_1_1 || !d2_1_4",
                    "!d2_1_1 || !d2_2_1",
                    "!d2_1_1 || !d2_2_1",
                    "!d2_1_1 || !d2_2_2",
                    "!d2_1_1 || !d2_3_1",
                    "!d2_1_1 || !d2_4_1",
                    "!d2_1_2 || !d2_1_3",
                    "!d2_1_2 || !d2_1_4",
                    "!d2_1_2 || !d2_2_1",
                    "!d2_1_2 || !d2_2_2",
                    "!d2_1_2 || !d2_2_2",
                    "!d2_1_2 || !d2_3_2",
                    "!d2_1_2 || !d2_4_2",
                    "!d2_1_3 || !d2_1_4",
                    "!d2_1_3 || !d2_1_4",
                    "!d2_1_3 || !d2_2_3",
                    "!d2_1_3 || !d2_2_3",
                    "!d2_1_3 || !d2_2_4",
                    "!d2_1_3 || !d2_3_3",
                    "!d2_1_3 || !d2_4_3",
                    "!d2_1_4 || !d2_2_3",
                    "!d2_1_4 || !d2_2_4",
                    "!d2_1_4 || !d2_2_4",
                    "!d2_1_4 || !d2_3_4",
                    "!d2_1_4 || !d2_4_4",
                    "!d2_2_1 || !d2_2_2",
                    "!d2_2_1 || !d2_2_2",
                    "!d2_2_1 || !d2_2_3",
                    "!d2_2_1 || !d2_2_4",
                    "!d2_2_1 || !d2_3_1",
                    "!d2_2_1 || !d2_4_1",
                    "!d2_2_2 || !d2_2_3",
                    "!d2_2_2 || !d2_2_4",
                    "!d2_2_2 || !d2_3_2",
                    "!d2_2_2 || !d2_4_2",
                    "!d2_2_3 || !d2_2_4",
                    "!d2_2_3 || !d2_2_4",
                    "!d2_2_3 || !d2_3_3",
                    "!d2_2_3 || !d2_4_3",
                    "!d2_2_4 || !d2_3_4",
                    "!d2_2_4 || !d2_4_4",
                    "!d2_3_1 || !d2_3_2",
                    "!d2_3_1 || !d2_3_2",
                    "!d2_3_1 || !d2_3_3",
                    "!d2_3_1 || !d2_3_4",
                    "!d2_3_1 || !d2_4_1",
                    "!d2_3_1 || !d2_4_1",
                    "!d2_3_1 || !d2_4_2",
                    "!d2_3_2 || !d2_3_3",
                    "!d2_3_2 || !d2_3_4",
                    "!d2_3_2 || !d2_4_1",
                    "!d2_3_2 || !d2_4_2",
                    "!d2_3_2 || !d2_4_2",
                    "!d2_3_3 || !d2_3_4",
                    "!d2_3_3 || !d2_3_4",
                    "!d2_3_3 || !d2_4_3",
                    "!d2_3_3 || !d2_4_3",
                    "!d2_3_3 || !d2_4_4",
                    "!d2_3_4 || !d2_4_3",
                    "!d2_3_4 || !d2_4_4",
                    "!d2_3_4 || !d2_4_4",
                    "!d2_4_1 || !d2_4_2",
                    "!d2_4_1 || !d2_4_2",
                    "!d2_4_1 || !d2_4_3",
                    "!d2_4_1 || !d2_4_4",
                    "!d2_4_2 || !d2_4_3",
                    "!d2_4_2 || !d2_4_4",
                    "!d2_4_3 || !d2_4_4",
                    "!d2_4_3 || !d2_4_4",
                    "!d3_1_1 || !d3_1_2",
                    "!d3_1_1 || !d3_1_2",
                    "!d3_1_1 || !d3_1_3",
                    "!d3_1_1 || !d3_1_4",
                    "!d3_1_1 || !d3_2_1",
                    "!d3_1_1 || !d3_2_1",
                    "!d3_1_1 || !d3_2_2",
                    "!d3_1_1 || !d3_3_1",
                    "!d3_1_1 || !d3_4_1",
                    "!d3_1_2 || !d3_1_3",
                    "!d3_1_2 || !d3_1_4",
                    "!d3_1_2 || !d3_2_1",
                    "!d3_1_2 || !d3_2_2",
                    "!d3_1_2 || !d3_2_2",
                    "!d3_1_2 || !d3_3_2",
                    "!d3_1_2 || !d3_4_2",
                    "!d3_1_3 || !d3_1_4",
                    "!d3_1_3 || !d3_1_4",
                    "!d3_1_3 || !d3_2_3",
                    "!d3_1_3 || !d3_2_3",
                    "!d3_1_3 || !d3_2_4",
                    "!d3_1_3 || !d3_3_3",
                    "!d3_1_3 || !d3_4_3",
                    "!d3_1_4 || !d3_2_3",
                    "!d3_1_4 || !d3_2_4",
                    "!d3_1_4 || !d3_2_4",
                    "!d3_1_4 || !d3_3_4",
                    "!d3_1_4 || !d3_4_4",
                    "!d3_2_1 || !d3_2_2",
                    "!d3_2_1 || !d3_2_2",
                    "!d3_2_1 || !d3_2_3",
                    "!d3_2_1 || !d3_2_4",
                    "!d3_2_1 || !d3_3_1",
                    "!d3_2_1 || !d3_4_1",
                    "!d3_2_2 || !d3_2_3",
                    "!d3_2_2 || !d3_2_4",
                    "!d3_2_2 || !d3_3_2",
                    "!d3_2_2 || !d3_4_2",
                    "!d3_2_3 || !d3_2_4",
                    "!d3_2_3 || !d3_2_4",
                    "!d3_2_3 || !d3_3_3",
                    "!d3_2_3 || !d3_4_3",
                    "!d3_2_4 || !d3_3_4",
                    "!d3_2_4 || !d3_4_4",
                    "!d3_3_1 || !d3_3_2",
                    "!d3_3_1 || !d3_3_2",
                    "!d3_3_1 || !d3_3_3",
                    "!d3_3_1 || !d3_3_4",
                    "!d3_3_1 || !d3_4_1",
                    "!d3_3_1 || !d3_4_1",
                    "!d3_3_1 || !d3_4_2",
                    "!d3_3_2 || !d3_3_3",
                    "!d3_3_2 || !d3_3_4",
                    "!d3_3_2 || !d3_4_1",
                    "!d3_3_2 || !d3_4_2",
                    "!d3_3_2 || !d3_4_2",
                    "!d3_3_3 || !d3_3_4",
                    "!d3_3_3 || !d3_3_4",
                    "!d3_3_3 || !d3_4_3",
                    "!d3_3_3 || !d3_4_3",
                    "!d3_3_3 || !d3_4_4",
                    "!d3_3_4 || !d3_4_3",
                    "!d3_3_4 || !d3_4_4",
                    "!d3_3_4 || !d3_4_4",
                    "!d3_4_1 || !d3_4_2",
                    "!d3_4_1 || !d3_4_2",
                    "!d3_4_1 || !d3_4_3",
                    "!d3_4_1 || !d3_4_4",
                    "!d3_4_2 || !d3_4_3",
                    "!d3_4_2 || !d3_4_4",
                    "!d3_4_3 || !d3_4_4",
                    "!d3_4_3 || !d3_4_4",
                    "!d4_1_1 || !d4_1_2",
                    "!d4_1_1 || !d4_1_2",
                    "!d4_1_1 || !d4_1_3",
                    "!d4_1_1 || !d4_1_4",
                    "!d4_1_1 || !d4_2_1",
                    "!d4_1_1 || !d4_2_1",
                    "!d4_1_1 || !d4_2_2",
                    "!d4_1_1 || !d4_3_1",
                    "!d4_1_1 || !d4_4_1",
                    "!d4_1_2 || !d4_1_3",
                    "!d4_1_2 || !d4_1_4",
                    "!d4_1_2 || !d4_2_1",
                    "!d4_1_2 || !d4_2_2",
                    "!d4_1_2 || !d4_2_2",
                    "!d4_1_2 || !d4_3_2",
                    "!d4_1_2 || !d4_4_2",
                    "!d4_1_3 || !d4_1_4",
                    "!d4_1_3 || !d4_1_4",
                    "!d4_1_3 || !d4_2_3",
                    "!d4_1_3 || !d4_2_3",
                    "!d4_1_3 || !d4_2_4",
                    "!d4_1_3 || !d4_3_3",
                    "!d4_1_3 || !d4_4_3",
                    "!d4_1_4 || !d4_2_3",
                    "!d4_1_4 || !d4_2_4",
                    "!d4_1_4 || !d4_2_4",
                    "!d4_1_4 || !d4_3_4",
                    "!d4_1_4 || !d4_4_4",
                    "!d4_2_1 || !d4_2_2",
                    "!d4_2_1 || !d4_2_2",
                    "!d4_2_1 || !d4_2_3",
                    "!d4_2_1 || !d4_2_4",
                    "!d4_2_1 || !d4_3_1",
                    "!d4_2_1 || !d4_4_1",
                    "!d4_2_2 || !d4_2_3",
                    "!d4_2_2 || !d4_2_4",
                    "!d4_2_2 || !d4_3_2",
                    "!d4_2_2 || !d4_4_2",
                    "!d4_2_3 || !d4_2_4",
                    "!d4_2_3 || !d4_2_4",
                    "!d4_2_3 || !d4_3_3",
                    "!d4_2_3 || !d4_4_3",
                    "!d4_2_4 || !d4_3_4",
                    "!d4_2_4 || !d4_4_4",
                    "!d4_3_1 || !d4_3_2",
                    "!d4_3_1 || !d4_3_2",
                    "!d4_3_1 || !d4_3_3",
                    "!d4_3_1 || !d4_3_4",
                    "!d4_3_1 || !d4_4_1",
                    "!d4_3_1 || !d4_4_1",
                    "!d4_3_1 || !d4_4_2",
                    "!d4_3_2 || !d4_3_3",
                    "!d4_3_2 || !d4_3_4",
                    "!d4_3_2 || !d4_4_1",
                    "!d4_3_2 || !d4_4_2",
                    "!d4_3_2 || !d4_4_2",
                    "!d4_3_3 || !d4_3_4",
                    "!d4_3_3 || !d4_3_4",
                    "!d4_3_3 || !d4_4_3",
                    "!d4_3_3 || !d4_4_3",
                    "!d4_3_3 || !d4_4_4",
                    "!d4_3_4 || !d4_4_3",
                    "!d4_3_4 || !d4_4_4",
                    "!d4_3_4 || !d4_4_4",
                    "!d4_4_1 || !d4_4_2",
                    "!d4_4_1 || !d4_4_2",
                    "!d4_4_1 || !d4_4_3",
                    "!d4_4_1 || !d4_4_4",
                    "!d4_4_2 || !d4_4_3",
                    "!d4_4_2 || !d4_4_4",
                    "!d4_4_3 || !d4_4_4",
                    "!d4_4_3 || !d4_4_4",
                    "d1_1_1 || d1_1_2 || d1_1_3 || d1_1_4",
                    "d1_1_1 || d1_1_2 || d1_2_1 || d1_2_2",
                    "d1_1_1 || d1_2_1 || d1_3_1 || d1_4_1",
                    "d1_1_1 || d2_1_1 || d3_1_1 || d4_1_1",
                    "d1_1_2 || d1_2_2 || d1_3_2 || d1_4_2",
                    "d1_1_2 || d2_1_2 || d3_1_2 || d4_1_2",
                    "d1_1_3 || d1_1_4 || d1_2_3 || d1_2_4",
                    "d1_1_3 || d1_2_3 || d1_3_3 || d1_4_3",
                    "d1_1_3 || d2_1_3 || d3_1_3 || d4_1_3",
                    "d1_1_4 || d1_2_4 || d1_3_4 || d1_4_4",
                    "d1_1_4 || d2_1_4 || d3_1_4 || d4_1_4",
                    "d1_2_1 || d1_2_2 || d1_2_3 || d1_2_4",
                    "d1_2_1 || d2_2_1 || d3_2_1 || d4_2_1",
                    "d1_2_2 || d2_2_2 || d3_2_2 || d4_2_2",
                    "d1_2_3 || d2_2_3 || d3_2_3 || d4_2_3",
                    "d1_2_4 || d2_2_4 || d3_2_4 || d4_2_4",
                    "d1_3_1 || d1_3_2 || d1_3_3 || d1_3_4",
                    "d1_3_1 || d1_3_2 || d1_4_1 || d1_4_2",
                    "d1_3_1 || d2_3_1 || d3_3_1 || d4_3_1",
                    "d1_3_2 || d2_3_2 || d3_3_2 || d4_3_2",
                    "d1_3_3 || d1_3_4 || d1_4_3 || d1_4_4",
                    "d1_3_3 || d2_3_3 || d3_3_3 || d4_3_3",
                    "d1_3_4 || d2_3_4 || d3_3_4 || d4_3_4",
                    "d1_4_1 || d1_4_2 || d1_4_3 || d1_4_4",
                    "d1_4_1 || d2_4_1 || d3_4_1 || d4_4_1",
                    "d1_4_2 || d2_4_2 || d3_4_2 || d4_4_2",
                    "d1_4_3 || d2_4_3 || d3_4_3 || d4_4_3",
                    "d1_4_4 || d2_4_4 || d3_4_4 || d4_4_4",
                    "d2_1_1 || d2_1_2 || d2_1_3 || d2_1_4",
                    "d2_1_1 || d2_1_2 || d2_2_1 || d2_2_2",
                    "d2_1_1 || d2_2_1 || d2_3_1 || d2_4_1",
                    "d2_1_2 || d2_2_2 || d2_3_2 || d2_4_2",
                    "d2_1_3 || d2_1_4 || d2_2_3 || d2_2_4",
                    "d2_1_3 || d2_2_3 || d2_3_3 || d2_4_3",
                    "d2_1_4 || d2_2_4 || d2_3_4 || d2_4_4",
                    "d2_2_1 || d2_2_2 || d2_2_3 || d2_2_4",
                    "d2_3_1 || d2_3_2 || d2_3_3 || d2_3_4",
                    "d2_3_1 || d2_3_2 || d2_4_1 || d2_4_2",
                    "d2_3_3 || d2_3_4 || d2_4_3 || d2_4_4",
                    "d2_4_1 || d2_4_2 || d2_4_3 || d2_4_4",
                    "d3_1_1 || d3_1_2 || d3_1_3 || d3_1_4",
                    "d3_1_1 || d3_1_2 || d3_2_1 || d3_2_2",
                    "d3_1_1 || d3_2_1 || d3_3_1 || d3_4_1",
                    "d3_1_2 || d3_2_2 || d3_3_2 || d3_4_2",
                    "d3_1_3 || d3_1_4 || d3_2_3 || d3_2_4",
                    "d3_1_3 || d3_2_3 || d3_3_3 || d3_4_3",
                    "d3_1_4 || d3_2_4 || d3_3_4 || d3_4_4",
                    "d3_2_1 || d3_2_2 || d3_2_3 || d3_2_4",
                    "d3_3_1 || d3_3_2 || d3_3_3 || d3_3_4",
                    "d3_3_1 || d3_3_2 || d3_4_1 || d3_4_2",
                    "d3_3_3 || d3_3_4 || d3_4_3 || d3_4_4",
                    "d3_4_1 || d3_4_2 || d3_4_3 || d3_4_4",
                    "d4_1_1 || d4_1_2 || d4_1_3 || d4_1_4",
                    "d4_1_1 || d4_1_2 || d4_2_1 || d4_2_2",
                    "d4_1_1 || d4_2_1 || d4_3_1 || d4_4_1",
                    "d4_1_2 || d4_2_2 || d4_3_2 || d4_4_2",
                    "d4_1_3 || d4_1_4 || d4_2_3 || d4_2_4",
                    "d4_1_3 || d4_2_3 || d4_3_3 || d4_4_3",
                    "d4_1_4 || d4_2_4 || d4_3_4 || d4_4_4",
                    "d4_2_1 || d4_2_2 || d4_2_3 || d4_2_4",
                    "d4_3_1 || d4_3_2 || d4_3_3 || d4_3_4",
                    "d4_3_1 || d4_3_2 || d4_4_1 || d4_4_2",
                    "d4_3_3 || d4_3_4 || d4_4_3 || d4_4_4",
                    "d4_4_1 || d4_4_2 || d4_4_3 || d4_4_4"]  
        assert '\n'.join(expected) == str(board0.cnf())



class TestLogicalInference(unittest.TestCase):
    
    def test_model_checker(self):
        sent = cnf.sentence(['!a || b || e', 
                             'a || !b', 
                             'b || !e', 
                             'd || !e', 
                             '!b || !c || !f', 
                             'a || !e', 
                             '!b || f', 
                             '!b || c'])
        model = {'a': -1, 'e': -1, 'b': -1, 'f': 1, 'd': 1, 'c': 1}
        assert sent.check_term(model)
        model = {'a': -1, 'e': -1, 'b': 1, 'f': -1, 'd': -1, 'c': -1}
        assert not sent.check_term(model) 

    def test_resolution_solver(self):
        clauses =  ['a || b',
                    '!a || b || e', 
                    'a || !b', 
                    'b || !e', 
                    'd || !e', 
                    '!b || !c || !f', 
                    'a || !e', 
                    '!b || f', 
                    '!b || c']
        assert not full_resolution(cnf.sentence(clauses))
        assert full_resolution(cnf.sentence(clauses[1:]))

        
    def test_cnf(self):
        assert cnf.c('d || !c') == cnf.c('!c || d')
        
    def test_resolve_symbol(self):
        resolvent = resolve_symbol(cnf.c('!b || !c'), cnf.c('b || d'), 'b')
        assert resolvent == cnf.c('d || !c')
        resolvent = resolve_symbol(cnf.c('!b || !c || e'), cnf.c('b || d'), 'b')
        assert resolvent == cnf.c('d || !c || e')
        resolvent = resolve_symbol(cnf.c('!b || !c'), cnf.c('b || d'), 'c')
        assert resolvent == None
        resolvent = resolve_symbol(cnf.c('!b || !c'), cnf.c('b || c || e || d'), 'b')
        assert resolvent == None
        resolvent = resolve_symbol(cnf.c('!b || !c'), cnf.c('b || !c || e || d'), 'b')
        assert resolvent == cnf.c('d || !c || e')
        
    def test_unit_resolution(self):
        sent = cnf.sentence(['!b || d', 
                             '!b || e', 
                             '!c || !e || !f', 
                             '!e || f', 
                             'a || !b', 
                             'b || !d || e', 
                             'c || !e', 
                             'd || !e', 
                             'd || e'])
        resolved = unit_resolution(cnf.c('!a'), sent)
        expected = cnf.sentence(['!a', 
                                 '!b', 
                                 '!b || d',
                                 '!b || e', 
                                 '!c || !e || !f', 
                                 '!d || e', 
                                 '!e || f', 
                                 'a || !b', 
                                 'b || !d || e', 
                                 'c || !e', 
                                 'd || !e', 
                                 'd || e'])
        assert set(resolved.clauses) == set(expected.clauses)
        resolved = unit_resolution(cnf.c('!c'), resolved)
        
    def test_search_solver(self):
        search_solver = SearchSolver()
        clauses =  ['a || b',
                    '!a || b || e', 
                    'a || !b', 
                    'b || !e', 
                    'd || !e', 
                    '!b || !c || !f', 
                    'a || !e', 
                    '!b || f', 
                    '!b || c']
        result = search_solver(cnf.sentence(clauses))
        assert result == None
        result = search_solver(cnf.sentence(clauses[1:]))
        assert result == {'a': -1, 'b': -1, 'c': 1, 'd': 1, 'e': -1,  'f': 1}

        
    